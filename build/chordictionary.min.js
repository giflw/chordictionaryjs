"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t};/**Chordictionary v0.1.0-alpha.2, @license MIT, (c) 2016 Hubert Fauconnier + contributors*/
!function(t){function r(){function t(t,r,e){for(var n=void 0,o=void 0,i={},a=0;a<t.length;a++)if(!isNaN(t[a])){o=t[a]+h.indexOf(e[a]),o>h.length-1&&(o-=h.length);for(var f=0;f<r.length;f++)i[h[o]]?h[o]===h[f]&&i[h[o]]++:i[h[o]]=1}for(var s=0;s<r.length;s++){if(!(r[s]in i)){n=!1;break}n=!0}return n}function r(t,r){t=t.toLowerCase(),r=r||"EADGBE";var e=[];if(t.length<=r.length)return t.split("");if(t.length===2*r.length){for(var n=0;n<t.length;n++)n%2||e.push(t.slice(n,n+2));return e}if(t.length>r.length){if(a(t.split(""),"max")>1){for(var o=0;o<t.length;o++)-1!==t.charAt(o).search(/[x02-9]/i)||1===t.charAt(o)&&-1!==t.charAt(o+1).search(/x/i)?e.push(t.slice(o,o+1)):-1===t.charAt(o+1).search(/x/i)&&(e.push(t.slice(o,o+2)),o++);return e}throw s.invalidTab}return!1}function e(t){var r=[],e=new RegExp("^[a-g]+$","i"),n=new RegExp("^[#a-g]+$","i");if(e.test(t))return t.toUpperCase().split("");if(n.test(t)){t=t.toUpperCase();for(var o=0;o<t.length;o++)"#"!==t.charAt(o)&&("#"!==t.charAt(o+1)?r.push(t.slice(o,o+1)):(r.push(t.slice(o,o+2)),o++));return r}throw s.invalidTuning}function n(t){var r=void 0,e=void 0;try{if("string"!=typeof t)throw s.invalidChordName;var n=t.search("#");return-1===n?(r=t.charAt(0),e=t.slice(1)):(r=t.slice(0,2).toUpperCase(),e=t.slice(2)),[r,e]}catch(o){return!1}}function o(t){if(Array.isArray(t))return t.filter(function(t,r,e){return r===e.indexOf(t)});throw t+" is not an array."}function i(t,r){if("object"===("undefined"==typeof t?"undefined":_typeof(t))){"string"==typeof r&&(r=r.toLowerCase());for(var e=0;e<t.length;e++)for(var n in t[e]){if(t[e][n]===r)return t[e];if("string"==typeof t[e][n]&&t[e][n].toLowerCase()===r)return t[e]}throw"Couldn't find "+r+" in "+t}throw t+" is not an object."}function a(t,r){var e=!1;if(!Array.isArray(t))throw t+" is not an array.";if("undefined"==typeof r)throw"Missing parameter.";switch(r){case"min":if(e=Math.min.apply(Math,t),!isNaN(e))return e;for(var n=0;n<t.length;n++)isNaN(t[n])||(isNaN(e)?e=t[n]:t[n]<e&&(e=t[n]));break;case"max":if(e=Math.max.apply(Math,t),!isNaN(e))return e;for(var o=0;o<t.length;o++)isNaN(t[o])||(isNaN(e)?e=t[o]:t[o]>e&&(e=t[o]));break;default:e=f(t.join(""),r)}return e}function f(t,r,e){if(t+="",r+="",r.length<=0)return t.length+1;for(var n=0,o=0,i=e?1:r.length;;){if(o=t.indexOf(r,o),!(o>=0))break;++n,o+=i}return n}var s={croppedChordLayout:"Number of frets does not allow full display of the chord.",failedToConvertTabIntoNotes:"Could not convert the tab into notes.",failedToCalculateFormula:"Could not calculate the formulas.",invalidTab:'The tab should only be composed of "x" and numbers from 1 to 9.',invalidTuning:"The tuning doesn't seem right. It should only be composed of 1 or more letters from A to G.",invalidChordName:"The chord name doesn't seem right. A valid chord name could be Amin, C, Gsus4...",noMatch:"The tab didn't match any known chord."},h=["A","A#","B","C","C#","D","D#","E","F","F#","G","G#"],u=[{formula:"1-3-5",integer:"0-4-7",name:"Major",suffix:""},{formula:"1-5",integer:"0-7",name:"Power chord",suffix:"5"},{formula:"1-4-5",integer:"0-5-7",name:"Suspended fourth",suffix:"sus4"},{formula:"1-2-5",integer:"0-2-7",name:"Suspended second",suffix:"sus2"},{formula:"1-3-5-9",integer:"0-4-7-14",name:"Added ninth",suffix:"add9"},{formula:"1-3-5-6",integer:"0-4-7-9",name:"Major Sixth",suffix:"6"},{formula:"1-3-5-6-9",integer:"0-4-7-9-14",name:"Sixth, added ninth",suffix:"6/9"},{formula:"1-3-5-7",integer:"0-4-7-11",name:"Major seventh",suffix:"maj7"},{formula:"1-3-5-7-9",integer:"0-4-7-11-14",name:"Major ninth",suffix:"maj9"},{formula:"1-3-5-7-#11",integer:"0-4-7-11-18",name:"Major seventh, sharp eleventh",suffix:"maj7#11"},{formula:"1-3-5-7-9-13",integer:"0-4-7-11-14-21",name:"Major thirteen",suffix:"Maj13"},{formula:"1-b3-5",integer:"0-3-7",name:"Minor",suffix:"min"},{formula:"1-b3-5-9",integer:"0-3-7-14",name:"Minor, added ninth",suffix:"m(add9)"},{formula:"1-b3-5-6",integer:"0-3-7-9",name:"Minor sixth",suffix:"m6"},{formula:"1-b3-5-b6",integer:"0-3-7-8",name:"Minor, flat sixth",suffix:"mb6"},{formula:"1-b3-5-6-9",integer:"0-3-7-9-14",name:"Minor sixth, added ninth",suffix:"m6/9"},{formula:"1-b3-5-b7",integer:"0-3-7-10",name:"Minor seventh",suffix:"m7"},{formula:"1-b3-5-7",integer:"0-3-7-11",name:"Minor, major seventh",suffix:"m(maj7)"},{formula:"1-b3-5-b7",integer:"0-3-6-10",name:"Minor seventh, flat fifth",suffix:"m7b5"},{formula:"1-b3-5-b7-9",integer:"0-3-7-10-14",name:"Minor ninth",suffix:"m9"},{formula:"1-b3-5-7-9",integer:"0-3-7-11-14",name:"Minor ninth, major seventh",suffix:"m9(maj7)"},{formula:"1-b3-b5-b7-9",integer:"0-3-7-10-14",name:"Minor eleventh",suffix:"m9b5"},{formula:"1-b3-5-b7-9-11-13",integer:"0-3-7-10-14-17-21",name:"Minor thirteen",suffix:"m13"},{formula:"1-3-5-b7",integer:"0-4-7-10",name:"Dominant seventh",suffix:"7"},{formula:"1-3-5#",integer:"0-4-8",name:"Augmented",suffix:"aug"},{formula:"1-3-b5",integer:"0-4-6",name:"Diminished",suffix:"dim"},{formula:"1",integer:"0",name:"Single note",suffix:""},{formula:"1-3-b7",integer:"0-4-10",name:"Seventh",suffix:"7"},{formula:"1-3-6",integer:"0-4-9",name:"Sixth",suffix:"6"}],l={};return l.Instrument=function(t,r,n,o){try{l.isValidTuning(t)&&(this.tuning=e(t)),this.fretNumber=r,this.fretsToDisplay=isNaN(n)?0:n+1,this.maxSpan=isNaN(o)?4:o}catch(i){return console.error(i),!1}return this},l.Instrument.prototype.getChordInfo=function(t){var e=[],n=[],i=[],a={error:"",name:"",tab:t,notes:"",tuning:this.tuning.join(""),formula:""};try{l.isValidTab(t)&&(t=r(t))}catch(f){return a.error=f,a}var d=void 0,m=void 0;try{for(var g=0;g<t.length;g++)isNaN(t[g])?e.push("x"):(m=this.tuning[g],d=parseInt(t[g])+h.indexOf(m),d>h.length-1&&(d-=h.length),e.push(h[d]));a.notes=e.join("")}catch(f){return a.error=s.failedToConvertTabIntoNotes,a}var c=[];try{for(var p=0;p<this.tuning.length;p++)if(c.push({root:"",formula:[]}),e[p]&&"x"!==e[p].toLowerCase())for(var v=0;v<e.length;v++)if(e[v]&&"x"!==e[v].toLowerCase()){var b=h.indexOf(e[v])-h.indexOf(e[p]);0>b?b=h.length+b:0===b&&(c[p].root=e[v]),c[p].formula.push(b)}}catch(f){a.error=s.failedToCalculateFormula}for(var x=0;x<c.length;x++)if(""!==c[x].root){i.push(c[x].root),c[x].formula.sort(function(t,r){return t-r});var y=o(c[x].formula);n.push(y.join("-"))}var N=void 0,w=[],M=void 0,C=[];try{for(var j=0;j<u.length;j++){N=u[j].integer;for(var A=0;A<n.length;A++)M=new RegExp("^"+n[A]+"$","g"),N.match(M)&&i[A]&&(C.push(i[A]+u[j].suffix),w.push(u[j].formula))}if(!(w.length>0))throw s.noMatch;if(w.length>1){var T=o(w);a.formula=T}else a.formula=w}catch(f){return a.error=f,a}if(C.length>1){var S=o(C);a.name=S}else a.name=C;return a},l.Instrument.prototype.getChordsList=function(r,e,o){var f=this;o=o||0;var l=[],d=void 0,m=void 0,g=[],c=void 0,p=void 0,v={error:"",chordList:[],offset:0},b={basic:{rootBelow4thFret:!0,noMuteAfterFirstNote:!0,rootIsLowestNote:!0,splittedChord:!1,openString:!0},powerchord:{frettedNotes:[2,3],rootIsLowestNote:!0,rootOnLowestFret:!0,splittedChord:!1,openString:!1},bar:{rootIsLowestNote:!0,rootOnLowestFret:!0,barredString:[3,6],noMuteAfterFirstNote:!0,splittedChord:!1,openString:!1}};try{if("string"!=typeof r)throw s.invalidChordName;r=n(r),c=r[0],d=r[1],l.push(c),p=h.indexOf(c),m=i(u,d),g=m.integer.split("-")}catch(x){return v.error=s.invalidChordName,v}for(var y=1;y<g.length;y++){var N=parseInt(g[y])+parseInt(p);N>h.length-1&&(N-=h.length),l.push(h[N])}var w=[],M=void 0,C=0;for(C=0;C<this.tuning.length;C++){w[C]=[],w[C].push("x");for(var j=0;j<l.length;j++)M=h.indexOf(l[j])-h.indexOf(this.tuning[C]),0>M&&(M=h.length+M),w[C].push(M),M+12<this.fretNumber&&w[C].push(M+12)}var A=[];for(C=0;C<this.tuning.length;C++)for(var T=A.length,S=0;S<w[C].length;S++)if(A[S])for(var L=0;T>L;L++)if(0===S)A[L].push(w[C][S]);else{var O=A[L].slice(0);O.pop(),O.push(w[C][S]),A.push(O)}else A[S]=[w[C][S]];var I=[],F=function(t,r){for(var e in t){if(!r.hasOwnProperty(e))return!1;if("object"===_typeof(t[e])){var n=t[e][0],o=t[e][1];if(r[e]<n||r[e]>o)return!1}else if(r[e]!==t[e])return!1}return!0};try{for(var E=o;E<A.length;E++)if(t(A[E],l,this.tuning)&&a(A[E],"max")-a(A[E],"min")<this.maxSpan&&!function(){var t={openString:!1,frettedNotes:0},r=A[E].join(""),e=/[0-9]+[x]+[0-9]+/gi,n=/[0-9]+[x]+/gi;e.test(r)?t.splittedChord=!0:t.splittedChord=!1,n.test(r)?t.noMuteAfterFirstNote=!1:t.noMuteAfterFirstNote=!0;for(var o=0;o<A[E].length;o++){var i=A[E][o];if(!isNaN(i)){var s=i+h.indexOf(f.tuning[o]);0===i&&(t.openString=!0),p===s&&(0===t.frettedNotes&&(t.rootIsLowestNote=!0),t.rootBelow4thFret=4>=i?!0:!1,t.rootOnLowestFret=a(A[E],"min")>=i?!0:!1),(i>0&&o<A[E].length-1&&i===A[E][o-1]||a(A[E],i)>=3)&&(t.barredString=isNaN(t.barredString)?1:t.barredString+1),t.frettedNotes++}}var u={tab:A[E],tag:[]};Object.getOwnPropertyNames(b).forEach(function(r,e){F(b[r],t)&&u.tag.indexOf(r)&&u.tag.push(r)}),I.push(u)}(),e>0&&e<A[E].length&&I.length>=e){o=E+1;break}}catch(x){console.error(x)}return v.chordList=I,v.offset=o,v},l.Instrument.prototype.getChordLayout=function(t,e){var n=void 0,o=void 0,i=this.fretsToDisplay;try{n=l.isValidTab(e)?r(e):[0,0,0,0,0,0]}catch(a){return!1}for(var f=[],h=0;h<n.length;h++)isNaN(n[h])===!1&&f.push(n[h]);var u=Math.abs(Math.max.apply(Math,f)),d=Math.abs(Math.min.apply(Math,f)),m=1;u>=i&&(m=d>0?d:1),1===m&&u>5&&(m=u-i+2);try{if(0===i)i=u-m+2;else if(u-m+1>i-1)throw i=u-m+2,s.croppedChordLayout}catch(a){console.error(a)}o='<table class="chord">';for(var g=0;i>g;g++){var c=g+m-1;1===m&&0===g&&(o+="<thead>"),o+=c%2&&c>0?'<tr><th class="fret-number">'+c+"</th>":"<tr><th></th>";for(var p=0;p<this.tuning.length;p++){var v=parseInt(n[p]);o+=0===g?0===v?'<th><div class="dot open"></div></th>':"<th></th>":v===m+g-1?'<td><div class="dot plain">'+n[p]+"</div></td>":"<td></td>"}o+=1===m&&0===g?"<tr></thead>":"</tr>"}return o+='<caption align="bottom">'+t+"</caption>",o+="</table>"},l.isValidTab=function(t){var r=new RegExp("^[x0-9]*$","i");if(r.test(t))return!0;throw s.invalidTab},l.isValidTuning=function(t){var r=new RegExp("^[#a-g]+$","i");if(r.test(t))return!0;throw s.invalidTuning},l}"undefined"==typeof Chordictionary?t.Chordictionary=r():console.error("Chordictionary is already defined.")}(window);