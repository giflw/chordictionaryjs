import{WORDING}from"./wordings";import*as SCALE from"./scales";import*as CHORD from"./chords";import*as TUNING from"./tuning";import*as TAB from"./tab";import*as PARSER from"./parser";import*as TOOLS from"./tools";class Instrument{constructor(t,r,e,o){try{if(!TUNING.isValid(t))throw WORDING.invalidTuning;this.tuning=PARSER.splitTuning(t),this.fretNumber=r,this.fretsToDisplay=isNaN(e)?0:e+1,this.maxSpan=isNaN(o)?4:o}catch(t){return console.error(t),!1}return this}getChordInfo(t){let r=[],e=[],o="",i=[],n={error:"",tab:[],notes:"",tuning:this.tuning,chords:[]};try{if(!TAB.isValid(t))throw WORDING.invalidTab;t=PARSER.splitTab(t),n.tab=t}catch(t){return n.error=t,n}try{r=TAB.toNotes(t,this.tuning),n.notes=[...r]}catch(t){return n.error=WORDING.failedToConvertTabIntoNotes,n}try{e=TAB.getIntegerNotation(r)}catch(t){return n.error=WORDING.failedToCalculateFormula,n}o=e.map(TAB.stripFormula);try{for(let t=0;t<o.length;t++){let r=CHORD.find(o[t]);r&&i.push({formula:r.formula,integer:r.integer,intervalsInt:[...e][t],name:r.name,suffix:r.suffix})}if(!(i.length>0))throw WORDING.noMatch;{let t=CHORD.dedupMatches(i);i=i.filter((r,e)=>!t.includes(e))}}catch(t){return n.error=t,n}for(let t of i){var s=r[t.intervalsInt.indexOf(0)];n.chords.push({name:s+t.suffix,pitch:s,formula:t.formula,intervals:[],intervalsInt:t.intervalsInt,quality:t.name,suffix:t.suffix})}return n}getChordsList(t,r,e){e=e||0;let o,i,n,s,a=[],l=[],h={error:"",chordList:[],offset:0};const f={basic:{rootBelow4thFret:!0,noMuteAfterFirstNote:!0,rootIsLowestNote:!0,splittedChord:!1,openString:!0},powerchord:{frettedNotes:[2,3],rootIsLowestNote:!0,rootOnLowestFret:!0,splittedChord:!1,openString:!1},bar:{rootIsLowestNote:!0,rootOnLowestFret:!0,barredString:[3,6],noMuteAfterFirstNote:!0,splittedChord:!1,openString:!1}};try{if("string"!=typeof t)throw WORDING.invalidChordName;n=(t=PARSER.splitChordName(t))[0],o=t[1],a.push(n),s=SCALE.A.indexOf(n),l=(i=TOOLS.searchInObject(CHORD.FORMULAS,o)).integer.split("-")}catch(t){return h.error=WORDING.invalidChordName,h}for(let t=1;t<l.length;t++){let r=parseInt(l[t])+parseInt(s);r>SCALE.A.length-1&&(r-=SCALE.A.length),a.push(SCALE.A[r])}let d,u=[],p=0;for(p=0;p<this.tuning.length;p++){u[p]=[],u[p].push("x");for(let t=0;t<a.length;t++)(d=SCALE.A.indexOf(a[t])-SCALE.A.indexOf(this.tuning[p]))<0&&(d=SCALE.A.length+d),u[p].push(d),d+12<this.fretNumber&&u[p].push(d+12)}let g=[];for(p=0;p<this.tuning.length;p++){let t=g.length;for(let r=0;r<u[p].length;r++)if(g[r])for(let e=0;e<t;e++)if(0===r)g[e].push(u[p][r]);else{let t=g[e].slice(0);t.pop(),t.push(u[p][r]),g.push(t)}else g[r]=[u[p][r]]}let c=[],N=(t,r)=>{for(let e in t){if(!r.hasOwnProperty(e))return!1;if("object"==typeof t[e]){let o=t[e][0],i=t[e][1];if(r[e]<o||r[e]>i)return!1}else if(r[e]!==t[e])return!1}return!0};try{for(let t=e;t<g.length;t++){if(CHORD.isValid(g[t],a,this.tuning)&&TOOLS.arrayFind(g[t],"max")-TOOLS.arrayFind(g[t],"min")<this.maxSpan){let r={openString:!1,frettedNotes:0},e=g[t].join(""),o=/[0-9]+[x]+/gi;/[0-9]+[x]+[0-9]+/gi.test(e)?r.splittedChord=!0:r.splittedChord=!1,o.test(e)?r.noMuteAfterFirstNote=!1:r.noMuteAfterFirstNote=!0;for(let e=0;e<g[t].length;e++){let o=g[t][e];if(!isNaN(o)){let i=o+SCALE.A.indexOf(this.tuning[e]);0===o&&(r.openString=!0),s===i&&(0===r.frettedNotes&&(r.rootIsLowestNote=!0),r.rootBelow4thFret=o<=4,r.rootOnLowestFret=TOOLS.arrayFind(g[t],"min")>=o),(o>0&&e<g[t].length-1&&o===g[t][e-1]||TOOLS.arrayFind(g[t],o)>=3)&&(r.barredString=isNaN(r.barredString)?1:r.barredString+1),r.frettedNotes++}}let i={tab:g[t],tag:[]};Object.getOwnPropertyNames(f).forEach((t,e)=>{N(f[t],r)&&i.tag.indexOf(t)&&i.tag.push(t)}),c.push(i)}if(r>0&&r<g[t].length&&c.length===r){e=t+1;break}}}catch(t){console.error(t)}return h.chordList=c,h.offset=e,h}getChordLayout(t,r){let e,o,i=this.fretsToDisplay;try{e=TAB.isValid(r)?PARSER.splitTab(r):[0,0,0,0,0,0]}catch(t){return!1}let n=[];for(let t=0;t<e.length;t++)!1===isNaN(e[t])&&n.push(e[t]);let s=Math.abs(Math.max.apply(Math,n)),a=Math.abs(Math.min.apply(Math,n)),l=1;s>=i&&(l=a>0?a:1),1===l&&s>5&&(l=s-i+2);try{if(0===i)i=s-l+2;else if(s-l+1>i-1)throw i=s-l+2,WORDING.croppedChordLayout}catch(t){console.error(t)}o='<table class="chord">';for(let t=0;t<i;t++){let r=t+l-1;1===l&&0===t&&(o+="<thead>"),o+=r%2&&r>0?'<tr><th class="fret-number">'+r+"</th>":"<tr><th></th>";for(let r=0;r<this.tuning.length;r++){let i=parseInt(e[r]);o+=0===t?0===i?'<th><div class="dot open"></div></th>':"<th></th>":i===l+t-1?'<td><div class="dot plain">'+e[r]+"</div></td>":"<td></td>"}o+=1===l&&0===t?"<tr></thead>":"</tr>"}return o+='<caption align="bottom">'+t+"</caption>",o+="</table>"}}const isValidTab=TAB.isValid,isValidTuning=TUNING.isValid;export{Instrument,isValidTab,isValidTuning};