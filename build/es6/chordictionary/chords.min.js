import{NOTES}from"./notes";import{WORDING}from"./wordings";export const FORMULAS=[{formula:"1-3-5",integer:"0-4-7",name:"Major",suffix:""},{formula:"1-3-5#",integer:"0-4-8",name:"Augmented",suffix:"aug"},{formula:"1-b3-b5",integer:"0-3-6",name:"Diminished",suffix:"dim"},{formula:"1-b3-5",integer:"0-3-7",name:"Minor",suffix:"min"},{formula:"1-b3-5-9",integer:"0-2-3-7",name:"Minor, added ninth",suffix:"m(add9)"},{formula:"1-3-4-5",integer:"0-4-5-7",name:"Added fourth",suffix:"add4"},{formula:"1-4-5",integer:"0-5-7",name:"Suspended fourth",suffix:"sus4"},{formula:"1-2-5",integer:"0-2-7",name:"Suspended second",suffix:"sus2"},{formula:"1-3-5-9",integer:"0-2-4-7",name:"Added ninth",suffix:"add9"},{formula:"1-3-b7",integer:"0-4-10",name:"Seventh",suffix:"7"},{formula:"1-3-5-b7",integer:"0-4-7-10",name:"Dominant seventh",suffix:"7"},{formula:"1-3-5-7",integer:"0-4-7-11",name:"Major seventh",suffix:"Maj7"},{formula:"1-b3-5-7",integer:"0-3-7-11",name:"Minor, major seventh",suffix:"m(Maj7)"},{formula:"1-b3-5-b7",integer:"0-3-7-10",name:"Minor seventh",suffix:"m7"},{formula:"1-b3-b5-b7",integer:"0-3-6-10",name:"Minor seventh, flat fifth",suffix:"m7b5"},{formula:"1-3-6",integer:"0-4-9",name:"Sixth",suffix:"6"},{formula:"1-b3-5-6",integer:"0-3-7-9",name:"Minor sixth",suffix:"m6"},{formula:"1-b3-5-b6",integer:"0-3-7-8",name:"Minor, flat sixth",suffix:"mb6"},{formula:"1-b3-5-6-9",integer:"0-2-3-7-9",name:"Minor sixth, added ninth",suffix:"m6/9"},{formula:"1-3-5-6",integer:"0-4-7-9",name:"Major Sixth",suffix:"Maj6"},{formula:"1-3-5-6-9",integer:"0-2-4-7-9",name:"Sixth, added ninth",suffix:"6/9"},{formula:"1-3-5-7-9",integer:"0-2-4-7-11",name:"Major ninth",suffix:"Maj9"},{formula:"1-b3-5-b7-9",integer:"0-2-3-7-10",name:"Minor ninth",suffix:"m9"},{formula:"1-b3-5-7-9",integer:"0-2-3-7-11",name:"Minor ninth, major seventh",suffix:"m9(Maj7)"},{formula:"1-b3-b5-b7-9",integer:"0-2-3-6-10",name:"Minor ninth flat fifth",suffix:"m9b5"},{formula:"1-3-5-7-9-11",integer:"0-4-5-11",name:"Major eleventh (no fifth, no ninth)",suffix:"Maj11"},{formula:"1-3-5-7-9-11",integer:"0-4-5-7-11",name:"Major eleventh (no ninth)",suffix:"Maj11"},{formula:"1-3-5-7-9-11",integer:"0-2-4-5-7-11",name:"Major eleventh",suffix:"Maj11"},{formula:"1-b3-5-b7-9-11-13",integer:"0-2-3-4-6-7-10",name:"Minor thirteen",suffix:"m13"},{formula:"1-3-5-b7-#11",integer:"0-4-6-7-10",name:"Seventh, sharp eleventh",suffix:"7#11"},{formula:"1-3-5-7-#11",integer:"0-4-6-7-11",name:"Major seventh, sharp eleventh",suffix:"Maj7#11"},{formula:"1-3-5-7-9-13",integer:"0-2-4-7-9-11",name:"Major thirteen",suffix:"Maj13"},{formula:"1",integer:"0",name:"Single note",suffix:""},{formula:"1-5",integer:"0-7",name:"Power chord",suffix:"5"}];export function isValid(e,n,i){let r,f,t={};for(let r=0;r<e.length;r++)if(!isNaN(e[r])){(f=e[r]+NOTES.indexOf(i[r]))>NOTES.length-1&&(f-=NOTES.length);for(let e=0;e<n.length;e++)t[NOTES[f]]?NOTES[f]===NOTES[e]&&t[NOTES[f]]++:t[NOTES[f]]=1}for(let e=0;e<n.length;e++){if(!(n[e]in t)){r=!1;break}r=!0}return r}export function parse(e){let n,i;try{if("string"!=typeof e)throw WORDING.invalidChordName;return-1===e.search("#")?(n=e.charAt(0),i=e.slice(1)):(n=e.slice(0,2).toUpperCase(),i=e.slice(2)),[n,i]}catch(e){return!1}}export function find(e){let n,i,r=e.join("-");for(let e=0;e<FORMULAS.length;e++)if(n=FORMULAS[e].integer,i=new RegExp("^"+r+"$","g"),n.match(i))return FORMULAS[e];return!1}export function dedupMatches(e){let n=[...e],i=[],r=[];for(let e=0;e<n.length;e++){let f=n[e].semitones.filter(e=>null!=e).join("");i.includes(f)?r.push(e):i.push(f)}return r}